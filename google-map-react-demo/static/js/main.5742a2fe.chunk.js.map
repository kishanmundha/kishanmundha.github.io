{"version":3,"sources":["components/Marker.js","reducers/MapAction.js","components/Map.js","Config.js","components/ResultListView.js","components/ResultDetailView.js","components/ResultView.js","App.js","serviceWorker.js","reducers/MapReducer.js","reducers/index.js","index.js"],"names":["Marker","onHoverPlace","place","_this","props","selected","onSelectPlace","this","updatePopupPosition","nextProps","key","hover","popupRef","style","top","clientHeight","opacity","_this2","_this$props","closePopup","react_default","a","createElement","Place_default","transform","concat","transformOrigin","transition","color","cursor","position","left","fontSize","onMouseEnter","onMouseLeave","onClick","ref","className","classes","popup","Paper_default","padding","IconButton_default","title","float","width","height","Close_default","Typography_default","variant","name","location","formattedAddress","Component","connect","dispatch","type","withStyles","zIndex","&:before","content","borderTop","borderLeft","borderRight","Map","state","center","lat","lng","zoom","updateBoundry","setState","minLat","minLng","maxLat","maxLng","places","forEach","bounds","nw","se","size","mapContainer","clientWidth","_fitBounds","fitBounds","prevProps","markers","map","index","components_Marker","Boolean","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","options","clickableIcons","defaultProps","selectedPlace","hoverPlace","display","flex","overflowX","List_default","Fragment","Divider_default","ListItem_default","button","alignItems","alt","src","backgroundImageURL","flexDirection","dense","ListItemIcon_default","contact","Call_default","formattedPhone","ResultView","isDetailView","AppBar_default","Toolbar_default","marginLeft","marginRight","aria-label","backToList","ArrowBack_default","noWrap","components_ResultListView","components_ResultDetailView","result","restaurants","App","setSearchResult","isMobile","isWidthDown","resultViewStyles","mapStyles","visibility","root","resultViewContainer","components_ResultView","components_Map","setSelectedPlace","withWidth","theme","_resultViewContainer","_mapContainer","Object","defineProperty","breakpoints","down","minWidth","boxShadow","window","hostname","match","initState","reducerMethods","_reducerMethods","action","objectSpread","MapReducer","arguments","length","undefined","middleware","compose","__REDUX_DEVTOOLS_EXTENSION__","persistState","sessionStorage","getItem","JSON","parse","store","createStore","combineReducers","subscribe","setItem","stringify","getState","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5742a2fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { SET_SELECTED_PLACE, SET_HOVER_PLACE } from '../reducers/MapAction';\r\n\r\nconst styles = {\r\n  popup: {\r\n    position: 'absolute',\r\n    top: -120,\r\n    left: -110,\r\n    width: 300,\r\n    zIndex: 1000,\r\n    opacity: 0,\r\n    '&:before': {\r\n      content: \"' '\", //eslint-disable-line\r\n      position: 'absolute',\r\n      top: '100%',\r\n      left: '100px',\r\n      width: '0',\r\n      borderTop: '20px solid white',\r\n      borderLeft: '10px solid transparent',\r\n      borderRight: '10px solid transparent',\r\n    },\r\n    transition: 'opacity 300ms linear, top 200ms linear',\r\n  },\r\n};\r\n\r\nclass Marker extends Component {\r\n  componentDidMount() {\r\n    this.updatePopupPosition();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updatePopupPosition();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.place.key !== this.props.place.key) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.selected !== this.props.selected) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.hover !== this.props.hover) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updatePopupPosition() {\r\n    if (this.popupRef) {\r\n      this.popupRef.style.top = 0 - this.popupRef.clientHeight - 60 + 'px';\r\n      this.popupRef.style.opacity = 1;\r\n    }\r\n  }\r\n\r\n  onHoverPlace = (place) => {\r\n    if (!this.props.selected) {\r\n      this.props.onHoverPlace(place);\r\n    }\r\n  };\r\n\r\n  onSelectPlace = () => {\r\n    if (!this.props.selected) {\r\n      this.props.onSelectPlace(this.props.place);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selected, place, hover, closePopup } = this.props;\r\n    const size = 'default';\r\n\r\n    return (\r\n      <div>\r\n        <PlaceIcon\r\n          style={{\r\n            transform: `scale(${selected || hover ? 2 : 1}, ${\r\n              selected || hover ? 2 : 1\r\n            })`,\r\n            transformOrigin: '50% 100% 0px',\r\n            transition: 'transform 100ms',\r\n            color: 'darkred',\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            left: -10,\r\n            top: -24,\r\n          }}\r\n          // color=\"secondary\"\r\n          fontSize={size}\r\n          onMouseEnter={() => this.onHoverPlace(place)}\r\n          onMouseLeave={() => this.onHoverPlace(null)}\r\n          onClick={this.onSelectPlace}\r\n        />\r\n        {selected && (\r\n          <div\r\n            ref={(ref) => (this.popupRef = ref)}\r\n            className={this.props.classes.popup}\r\n          >\r\n            <Paper style={{ padding: 8 }}>\r\n              <IconButton\r\n                title=\"Close\"\r\n                style={{ float: 'right', width: 24, height: 24, padding: 0 }}\r\n                onClick={closePopup}\r\n              >\r\n                <CloseIcon style={{ fontSize: 12 }} />\r\n              </IconButton>\r\n              <Typography variant=\"subtitle2\">{place.name}</Typography>\r\n              <Typography>{place.location.formattedAddress}</Typography>\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMarker.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n  hover: PropTypes.bool.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  onHoverPlace: PropTypes.func.isRequired,\r\n  onSelectPlace: PropTypes.func.isRequired,\r\n  closePopup: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapActionToProps = (dispatch) => ({\r\n  closePopup: () =>\r\n    dispatch({\r\n      type: SET_SELECTED_PLACE,\r\n      place: null,\r\n    }),\r\n  onSelectPlace: (place) =>\r\n    dispatch({\r\n      type: SET_SELECTED_PLACE,\r\n      place,\r\n    }),\r\n  onHoverPlace: (place) =>\r\n    dispatch({\r\n      type: SET_HOVER_PLACE,\r\n      place,\r\n    }),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(Marker));\r\n","export const SET_PLACE_RESULTS = '@map/SET_PLACE_RESULTS';\r\nexport const SET_SELECTED_PLACE = '@map/SET_SELECTED_PLACE';\r\nexport const SET_HOVER_PLACE = '@map/SET_HOVER_PLACE';\r\nexport const SET_BOUNDRY = '@map/SET_BOUNDRY';\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { fitBounds } from 'google-map-react/utils';\r\n\r\nimport Config from '../Config';\r\nimport Marker from './Marker';\r\n\r\nconst API_KEY = Config.googleMap.API_KEY;\r\n\r\nclass Map extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 32.950787,\r\n      lng: -96.821118,\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  state = {\r\n    center: {\r\n      lat: 32.950787,\r\n      lng: -96.821118,\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateBoundry();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.places !== prevProps.places ||\r\n      this.props.selected !== prevProps.selected\r\n    ) {\r\n      this.updateBoundry();\r\n    }\r\n  }\r\n\r\n  updateBoundry = () => {\r\n    const { selected } = this.props;\r\n\r\n    if (selected) {\r\n      this.setState({\r\n        center: {\r\n          lat: selected.location.lat,\r\n          lng: selected.location.lng,\r\n        },\r\n      });\r\n    } else {\r\n      let minLat = 180;\r\n      let minLng = 180;\r\n      let maxLat = -180;\r\n      let maxLng = -180;\r\n      const { places } = this.props;\r\n\r\n      places.forEach((place) => {\r\n        if (place.location.lat < minLat) {\r\n          minLat = place.location.lat;\r\n        }\r\n        if (place.location.lng < minLng) {\r\n          minLng = place.location.lng;\r\n        }\r\n        if (place.location.lat > maxLat) {\r\n          maxLat = place.location.lat;\r\n        }\r\n        if (place.location.lng > maxLng) {\r\n          maxLng = place.location.lng;\r\n        }\r\n      });\r\n\r\n      const bounds = {\r\n        nw: {\r\n          lat: minLat,\r\n          lng: minLng,\r\n        },\r\n        se: {\r\n          lat: maxLat,\r\n          lng: maxLng,\r\n        },\r\n      };\r\n\r\n      const size = {\r\n        width:\r\n          this.mapContainer.clientWidth - this.mapContainer.clientWidth * 0.1,\r\n        height:\r\n          this.mapContainer.clientHeight - this.mapContainer.clientHeight * 0.1,\r\n      };\r\n\r\n      if (bounds.nw.lat === bounds.se.lat && bounds.nw.lng === bounds.se.lng) {\r\n        this.setState({\r\n          zoom: 14,\r\n          center: bounds.nw,\r\n        });\r\n      } else {\r\n        const { center, zoom } = fitBounds(bounds, size);\r\n\r\n        this.setState({\r\n          zoom,\r\n          center,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selected, places, hover } = this.props;\r\n    const markers = places.map((place, index) => (\r\n      <Marker\r\n        key={index}\r\n        lat={place.location.lat}\r\n        lng={place.location.lng}\r\n        place={place}\r\n        selected={Boolean(selected) && selected.key === place.key}\r\n        hover={Boolean(hover) && hover.key === place.key}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div\r\n        ref={(ref) => (this.mapContainer = ref)}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: API_KEY }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n          zoom={this.state.zoom}\r\n          center={this.state.center}\r\n          options={{\r\n            clickableIcons: false,\r\n          }}\r\n        >\r\n          {markers}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMap.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  selected: PropTypes.object,\r\n  hover: PropTypes.object,\r\n  zoom: PropTypes.number.isRequired,\r\n  center: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  places: state.map.places,\r\n  selected: state.map.selectedPlace,\r\n  hover: state.map.hoverPlace,\r\n});\r\n\r\nconst mapActionToProps = () => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(Map);\r\n","export default {\r\n  googleMap: {\r\n    API_KEY: 'AIzaSyB5cw1fbGpv3_TCc085CfJnmkGA4zm-NCM',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { SET_SELECTED_PLACE, SET_HOVER_PLACE } from '../reducers/MapAction';\r\n\r\nconst ResultListView = (props) => {\r\n  const { places, onSelectPlace, onHoverPlace } = props;\r\n  return (\r\n    <div style={{ display: 'flex', flex: 1, overflowX: 'auto' }}>\r\n      <List>\r\n        {places.map((place, index) => (\r\n          <React.Fragment key={index}>\r\n            {index !== 0 && <Divider />}\r\n            <ListItem\r\n              button\r\n              style={{\r\n                alignItems: 'flex-start',\r\n              }}\r\n              onClick={() => onSelectPlace(place)}\r\n              onMouseEnter={() => onHoverPlace(place)}\r\n              onMouseLeave={() => onHoverPlace(null)}\r\n            >\r\n              <div style={{ flex: 1 }}>\r\n                <Typography variant=\"subtitle1\">{place.name}</Typography>\r\n                <Typography variant=\"caption\">\r\n                  {place.location.formattedAddress}\r\n                </Typography>\r\n              </div>\r\n              <div>\r\n                <img\r\n                  alt=\"img\"\r\n                  src={place.backgroundImageURL}\r\n                  style={{ width: 72, height: 72 }}\r\n                />\r\n              </div>\r\n            </ListItem>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nResultListView.propTypes = {\r\n  places: PropTypes.array.isRequired,\r\n  onSelectPlace: PropTypes.func.isRequired,\r\n  onHoverPlace: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  places: state.map.places,\r\n});\r\n\r\nconst mapActionToProps = (dispatch) => ({\r\n  onSelectPlace: (place) =>\r\n    dispatch({\r\n      type: SET_SELECTED_PLACE,\r\n      place,\r\n    }),\r\n  onHoverPlace: (place) =>\r\n    dispatch({\r\n      type: SET_HOVER_PLACE,\r\n      place,\r\n    }),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(ResultListView);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\nconst ResultDetailView = (props) => {\r\n  const { place } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        overflowX: 'auto',\r\n      }}\r\n    >\r\n      <img alt=\"restaurant\" src={place.backgroundImageURL} width=\"100%\" />\r\n      <List>\r\n        <ListItem dense>\r\n          <ListItemIcon>\r\n            <PlaceIcon />\r\n          </ListItemIcon>\r\n          <Typography>{place.location.formattedAddress}</Typography>\r\n        </ListItem>\r\n        {Boolean(place.contact) && (\r\n          <ListItem dense>\r\n            <ListItemIcon>\r\n              <CallIcon />\r\n            </ListItemIcon>\r\n            <Typography>{place.contact.formattedPhone}</Typography>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nResultDetailView.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  place: state.map.selectedPlace,\r\n});\r\n\r\nconst mapActionToProps = () => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(ResultDetailView);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { SET_SELECTED_PLACE } from '../reducers/MapAction';\r\nimport ResultListView from './ResultListView';\r\nimport ResultDetailView from './ResultDetailView';\r\n\r\nclass ResultView extends Component {\r\n  render() {\r\n    const { selected } = this.props;\r\n    const isDetailView = Boolean(selected);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <IconButton\r\n              style={{\r\n                marginLeft: isDetailView ? -12 : -68,\r\n                marginRight: 20,\r\n                opacity: isDetailView ? 1 : 0,\r\n                transition: 'margin-left 300ms ease-in, opacity 300ms ease-in',\r\n              }}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n              onClick={this.props.backToList}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              {isDetailView ? selected.name : 'Restaurants'}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {!isDetailView && <ResultListView />}\r\n        {isDetailView && <ResultDetailView />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResultView.propTypes = {\r\n  selected: PropTypes.object,\r\n  backToList: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selected: state.map.selectedPlace,\r\n});\r\n\r\nconst mapActionToProps = (dispatch) => ({\r\n  backToList: () =>\r\n    dispatch({\r\n      type: SET_SELECTED_PLACE,\r\n      place: null,\r\n    }),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(ResultView);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport './App.css';\nimport result from './result.json';\n\nimport { SET_PLACE_RESULTS, SET_SELECTED_PLACE } from './reducers/MapAction';\n\nimport Map from './components/Map';\nimport ResultView from './components/ResultView';\n\nresult.restaurants.forEach((place, index) => {\n  place.key = index;\n});\n\nconst styles = (theme) => ({\n  root: {\n    height: '100vh',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column-reverse',\n    },\n  },\n  resultViewContainer: {\n    width: 400,\n    minWidth: 400,\n    boxShadow: '-10px 0px 30px black',\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n      minWidth: 300,\n    },\n    [theme.breakpoints.down('xs')]: {\n      boxShadow: 'none',\n      width: '100%',\n      minWidth: '100%',\n      height: '50vh',\n    },\n    transition: 'height 300ms ease-in',\n  },\n  mapContainer: {\n    height: '100%',\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '50vh',\n      opacity: 1,\n      visibility: 'visible',\n    },\n    transition: 'opacity 300ms ease-in, visibility 300ms ease-in',\n  },\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.setSearchResult(result.restaurants);\n  }\n\n  render() {\n    const { classes, selected, width } = this.props;\n    let isMobile = isWidthDown('xs', width);\n\n    const resultViewStyles = {};\n    const mapStyles = {};\n\n    if (selected && isMobile) {\n      resultViewStyles.height = '100vh';\n      mapStyles.opacity = 0;\n      mapStyles.visibility = 'hidden';\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.resultViewContainer} style={resultViewStyles}>\n          <ResultView />\n        </div>\n        <div className={classes.mapContainer} style={mapStyles}>\n          <Map />\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  setSearchResult: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  selected: PropTypes.object,\n  width: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  selected: state.map.selectedPlace,\n});\n\nconst mapActionToProps = (dispatch) => ({\n  setSearchResult: (places) =>\n    dispatch({\n      type: SET_PLACE_RESULTS,\n      places,\n    }),\n  setSelectedPlace: (place) =>\n    dispatch({\n      type: SET_SELECTED_PLACE,\n      place,\n    }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withWidth()(withStyles(styles)(App)));\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_PLACE_RESULTS,\r\n  SET_SELECTED_PLACE,\r\n  SET_HOVER_PLACE,\r\n  SET_BOUNDRY,\r\n} from './MapAction';\r\n\r\nconst initState = {\r\n  places: [],\r\n  selectedPlace: null,\r\n  hoverPlace: null,\r\n  zoom: 11,\r\n  center: {\r\n    lat: 32.950787,\r\n    lng: -96.821118,\r\n  },\r\n};\r\n\r\nconst setPlaceResults = (state, action) => {\r\n  return {\r\n    ...state,\r\n    places: action.places || [],\r\n  };\r\n};\r\n\r\nconst setSelectedPlace = (state, action) => {\r\n  return {\r\n    ...state,\r\n    selectedPlace: action.place,\r\n    hoverPlace: null,\r\n  };\r\n};\r\n\r\nconst setHoverPlace = (state, action) => {\r\n  return {\r\n    ...state,\r\n    hoverPlace: action.place,\r\n  };\r\n};\r\n\r\nconst setBoundry = (state, action) => {\r\n  return {\r\n    ...state,\r\n    center: action.center,\r\n    zoom: action.zoom,\r\n  };\r\n};\r\n\r\nconst reducerMethods = {\r\n  [SET_PLACE_RESULTS]: setPlaceResults,\r\n  [SET_SELECTED_PLACE]: setSelectedPlace,\r\n  [SET_HOVER_PLACE]: setHoverPlace,\r\n  [SET_BOUNDRY]: setBoundry,\r\n};\r\n\r\nconst MapReducer = (state = initState, action) => {\r\n  if (reducerMethods[action.type]) {\r\n    return reducerMethods[action.type](state, action);\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default MapReducer;\r\n","import { createStore, combineReducers, compose } from 'redux';\r\nimport MapReducer from './MapReducer';\r\n\r\n// Enable redux dev tool\r\nconst middleware = compose(\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n// fetch persistState from sessionStorage\r\n// As demo we just want to persist on session storage\r\n// and clear once browser close\r\nconst persistState = !sessionStorage.getItem('br-codingexamps')\r\n  ? undefined\r\n  : JSON.parse(sessionStorage.getItem('br-codingexamps'));\r\n\r\n// Create redux store\r\nconst store = createStore(\r\n  combineReducers({\r\n    map: MapReducer,\r\n  }),\r\n  persistState,\r\n  middleware\r\n);\r\n\r\n// Listen store change and keep change on sessionStorage\r\nstore.subscribe(() => {\r\n  sessionStorage.setItem('br-codingexamps', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './reducers';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}